Question 1 -------> T = O(n) S = O(n)

class Solution {
    public int[] rearrangeArray(int[] nums) {
        int k = 0, j = 1;
        int[] _nums = new int[nums.length];
        for(int i = 0; i < nums.length; i++)
        {
            if(nums[i] > 0)
            {
                _nums[k] = nums[i];
                k = k+2;
            }
            else
            {
                _nums[j] = nums[i];
                j = j+2;
            }
        }  
        return _nums;
    }
}

Question 3 ----------> T = O(n) S = O(1)

class Solution {
    public int maxProfit(int[] prices) {
        int profit = 0;
        int buy = prices[0];
        for(int i = 1; i < prices.length; i++)
        {
            if(prices[i] < buy)
                buy = prices[i];
            else if(prices[i]-buy > profit)
                profit = prices[i]-buy;
        }
        return profit;
    }
}
