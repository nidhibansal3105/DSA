Question 2 -------> T = O(m)+O(logm) S = O(1)

class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        int low = 0;
        int high = 0;
        int i = 0, mid;
        while(i < matrix.length)
        {
            low = matrix[i][0];
            high = matrix[i][matrix[0].length-1];
            if(target >= low && target <= high)
            {
                break;
            }
            else
            {
                i++;
            }
        }
        low = 0;
        high = matrix[0].length-1;
        while(low <= high && i < matrix.length)
        {
            mid = (low + high)/2;
            if(matrix[i][mid] == target)
                return true;
            else if(matrix[i][mid] > target)
                high = mid-1;
            else
                low = mid+1;
        }
        return false;
    }
}


Question 3 -------> T = O(m+n) S = O(1)

class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        int row = 0;
        int column = matrix[0].length-1;
        while(row < matrix.length && column >= 0)
        {
            if(matrix[row][column] == target)
                return true;
            else if(matrix[row][column] < target)
                row++;
            else
                column--;
        }
        return false;
    }
}
